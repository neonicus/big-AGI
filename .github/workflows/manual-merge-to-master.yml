name: 2. Manual Merge v2-dev to Master (For Deploy) - Forcing v2-dev Wins

on:
  workflow_dispatch: # ต้องกดปุ่ม 'Run workflow' ด้วยตนเองเท่านั้น

jobs:
  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write # จำเป็นสำหรับการ push กลับไปยัง master ของคุณ

    steps:
      - name: Checkout your master branch (Target)
        uses: actions/checkout@v4
        with:
          ref: master # 1. เราเริ่มต้นด้วยการ Checkout สาขา 'master' ของคุณ
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Add upstream remote (enricoros)
        run: git remote add upstream https://github.com/enricoros/big-AGI.git

      - name: Fetch all remotes
        run: |
          git fetch upstream
          git fetch origin # ดึงข้อมูลสาขาล่าสุดจาก Fork ของเราเอง (รวมถึง v2-dev)

      - name: Merge origin/v2-dev into master (Forcing v2-dev Wins)
        run: |
          git checkout master
          
          # 2. สั่ง Merge โดยใช้กลยุทธ์ 'theirs' เพื่อให้โค้ดจาก origin/v2-dev ชนะ Conflict
          echo "Attempting to merge origin/v2-dev into master, prioritizing v2-dev changes..."
          git merge origin/v2-dev --no-ff --allow-unrelated-histories -X theirs
          
      - name: Check for Merge Conflicts (Should be empty now)
        id: check_conflict
        run: |
          # เนื่องจากเราใช้ -X theirs หากมี Conflict ในไฟล์ที่แก้ไขพร้อมกัน 
          # Git ควรจะเลือกเวอร์ชัน 'theirs' (origin/v2-dev) โดยอัตโนมัติ
          # เรายังคงตรวจสอบเพื่อความปลอดภัย
          if git diff --quiet; then
            echo "merge_status=success" >> $GITHUB_OUTPUT
          else
            # หากยังมี Conflict หลงเหลืออยู่ (ซึ่งไม่ควรเกิดขึ้นหากไฟล์ไม่ได้ถูกลบ/เพิ่ม)
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
            echo "::error::Unexpected conflict remaining after using -X theirs. Please check manually."
            exit 1 
          fi

      - name: Push merged changes to master
        if: steps.check_conflict.outputs.merge_status == 'success'
        run: |
          echo "Pushing merged changes to origin/master for Vercel deployment..."
          git push origin master
